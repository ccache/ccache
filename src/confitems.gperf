%language=ANSI-C
%enum
%struct-type
%readonly-tables
%global-table
%define hash-function-name confitems_hash
%define lookup-function-name confitems_get
%define initializer-suffix ,0,0,NULL,NULL,NULL
%{
#include "confitems.h"
#include "conf.h"

#undef bool
#define ITEM_ENTRY(name, type, verify_fn) \
	offsetof(struct conf, name), confitem_parse_ ## type, \
	confitem_format_ ## type, verify_fn
#define ITEM(name, type) \
	ITEM_ENTRY(name, type, NULL)
#define ITEM_V(name, type, verification) \
	ITEM_ENTRY(name, type, confitem_verify_ ## verification)
%}
struct conf_item;
%%
base_dir,                    0, ITEM_V(base_dir, env_string, absolute_path)
cache_dir,                   1, ITEM(cache_dir, env_string)
cache_dir_levels,            2, ITEM_V(cache_dir_levels, unsigned, dir_levels)
compiler,                    3, ITEM(compiler, string)
compiler_check,              4, ITEM(compiler_check, string)
compression,                 5, ITEM(compression, bool)
compression_level,           6, ITEM_V(compression_level, int, compression_level)
cpp_extension,               7, ITEM(cpp_extension, string)
debug,                       8, ITEM(debug, bool)
depend_mode,                 9, ITEM(depend_mode, bool)
direct_mode,                10, ITEM(direct_mode, bool)
disable,                    11, ITEM(disable, bool)
extra_files_to_hash,        12, ITEM(extra_files_to_hash, env_string)
file_clone,                 13, ITEM(file_clone, bool)
hard_link,                  14, ITEM(hard_link, bool)
hash_dir,                   15, ITEM(hash_dir, bool)
ignore_headers_in_manifest, 16, ITEM(ignore_headers_in_manifest, env_string)
keep_comments_cpp,          17, ITEM(keep_comments_cpp, bool)
limit_multiple,             18, ITEM(limit_multiple, double)
log_file,                   19, ITEM(log_file, env_string)
max_files,                  20, ITEM(max_files, unsigned)
max_size,                   21, ITEM(max_size, size)
path,                       22, ITEM(path, env_string)
pch_external_checksum,      23, ITEM(pch_external_checksum, bool)
prefix_command,             24, ITEM(prefix_command, env_string)
prefix_command_cpp,         25, ITEM(prefix_command_cpp, env_string)
read_only,                  26, ITEM(read_only, bool)
read_only_direct,           27, ITEM(read_only_direct, bool)
recache,                    28, ITEM(recache, bool)
run_second_cpp,             29, ITEM(run_second_cpp, bool)
sloppiness,                 30, ITEM(sloppiness, sloppiness)
stats,                      31, ITEM(stats, bool)
temporary_dir,              32, ITEM(temporary_dir, env_string)
umask,                      33, ITEM(umask, umask)
unify,                      34, ITEM(unify, bool)
%%
size_t confitems_count(void)
{
    return TOTAL_KEYWORDS;
}
